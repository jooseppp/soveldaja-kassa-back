services:
  postgres:
    image: postgres:latest
    platform: linux/arm64
    container_name: kassa-postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: kassa
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - kassa-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kassa-app-back
    platform: linux/arm64
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/kassa
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
    ports:
      - "8080:8080"
    networks:
      - kassa-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: kassa-prometheus
    platform: linux/arm64
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alert_rules.yml:/etc/prometheus/alert_rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - kassa-network
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: kassa-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - kassa-network

  grafana:
    image: grafana/grafana:latest
    container_name: kassa-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - kassa-network

networks:
  kassa-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  grafana-data: